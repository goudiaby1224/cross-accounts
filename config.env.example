# Configuration file for cross-account AWS deployment
# Copy this to config.env and update the values for your environment

# AWS Account Configuration
export ACCOUNT_A_ID="111111111111"          # Replace with your Account A ID (Lambda account)
export ACCOUNT_B_ID="222222222222"          # Replace with your Account B ID (RDS account)
export AWS_REGION="us-east-1"               # AWS region for deployment

# VPC Configuration
export ACCOUNT_A_VPC_ID="vpc-0123456789abcdef0"    # VPC ID in Account A
export ACCOUNT_B_VPC_ID="vpc-0987654321fedcba0"    # VPC ID in Account B
export ACCOUNT_A_VPC_CIDR="10.0.0.0/16"           # CIDR block for Account A VPC
export ACCOUNT_B_VPC_CIDR="10.1.0.0/16"           # CIDR block for Account B VPC

# Subnet Configuration (for Lambda deployment)
export ACCOUNT_A_PRIVATE_SUBNET_IDS="subnet-0123456789abcdef0,subnet-0123456789abcdef1"  # Private subnets for Lambda
export ACCOUNT_A_ROUTE_TABLE_IDS="rtb-0123456789abcdef0,rtb-0123456789abcdef1"          # Route tables to update for peering

# Security Configuration
export EXTERNAL_ID=""                        # Leave empty to auto-generate, or set a custom external ID
export CROSS_ACCOUNT_ROLE_NAME="CrossAccountRDSAccessRole"  # Name of the cross-account role in Account B

# Database Configuration
export DB_INSTANCE_IDENTIFIER="my-postgres-db"     # RDS instance identifier in Account B
export DB_NAME="postgres"                          # Database name
export DB_USERNAME="postgres"                      # Database username
export DB_PASSWORD=""                              # Database password (set this manually or use AWS Secrets Manager)

# Lambda Configuration
export LAMBDA_FUNCTION_NAME="RDSCrossAccountConnector"
export LAMBDA_RUNTIME="python3.9"
export LAMBDA_TIMEOUT="300"                        # Lambda timeout in seconds
export LAMBDA_MEMORY_SIZE="512"                    # Lambda memory in MB

# Java Lambda Configuration (for Java implementation)
export JAVA_LAMBDA_FUNCTION_NAME="RDSDataExtractorJava"
export JAVA_LAMBDA_RUNTIME="java11"
export JAVA_LAMBDA_TIMEOUT="300"
export JAVA_LAMBDA_MEMORY_SIZE="512"
export JAVA_LAMBDA_HANDLER="com.example.lambda.RDSDataExtractorHandler::handleRequest"

# Data Extraction Configuration (Java Lambda)
export S3_BUCKET_NAME="my-data-extraction-bucket"          # S3 bucket for CSV output
export S3_KEY_PREFIX="extracts/daily"                      # S3 key prefix for files
export CSV_FILENAME_PREFIX="rds_data_extract"              # CSV filename prefix
export DB_QUERY="SELECT table_name, table_schema, table_type FROM information_schema.tables WHERE table_schema = 'public' ORDER BY table_name"  # SQL query to execute

# Environment and Tagging
export ENVIRONMENT="production"                    # Environment: development, staging, production
export PROJECT_NAME="cross-account-rds"           # Project name for resource naming and tagging
export COST_CENTER="engineering"                  # Cost center for billing
export OWNER="devops-team"                        # Owner/team responsible

# Monitoring and Logging
export CLOUDWATCH_LOG_RETENTION_DAYS="30"         # CloudWatch log retention period
export ENABLE_VPC_FLOW_LOGS="true"               # Enable VPC flow logs for monitoring
export SNS_NOTIFICATION_EMAIL=""                  # Email for SNS notifications (optional)

# Terraform Backend Configuration (optional)
export TF_BACKEND_BUCKET=""                       # S3 bucket for Terraform state
export TF_BACKEND_KEY="cross-account-rds/terraform.tfstate"  # S3 key for state file
export TF_BACKEND_REGION="us-east-1"             # Region for Terraform backend
export TF_BACKEND_DYNAMODB_TABLE=""              # DynamoDB table for state locking

# Advanced Configuration
export ENABLE_ENHANCED_MONITORING="false"         # Enable enhanced monitoring for RDS
export BACKUP_RETENTION_PERIOD="7"               # RDS backup retention in days
export MULTI_AZ_DEPLOYMENT="false"               # Enable Multi-AZ for RDS
export RDS_INSTANCE_CLASS="db.t3.micro"          # RDS instance class

# Network Security
export ENABLE_ENCRYPTION_IN_TRANSIT="true"       # Force SSL/TLS for database connections
export ENABLE_ENCRYPTION_AT_REST="true"          # Enable encryption at rest for RDS
export KMS_KEY_ID=""                              # Custom KMS key ID (leave empty for default)

# Load this configuration file with: source config.env.example
